# DO NOT EDIT THIS FILE.
# This file is part of a git repository, your changes may prevent updates
[gcode_macro SET_ACCEL]
gcode:
    {% set printer_config = printer.configfile.settings['printer'] %}
    {% set s = params.ACCEL|default(printer_config.max_accel)|float %}
    SET_VELOCITY_LIMIT ACCEL={s}

[gcode_macro RAISE_Z]
description: Drop the bed by AMOUNT to prevent dragging
gcode:
    {% set curr_z = printer.toolhead.position.z %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set target_z = curr_z + params.AMOUNT|default(10)|float %}

    G90 ; absolute
    G1 Z { [target_z, max_z]|min }

[gcode_macro CLEAR_Z]
description: Drop Z by at least up to AMOUNT to leave room for stuff
gcode:
    {% set curr_z = printer.toolhead.position.z %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set target_z = [curr_z, params.AMOUNT|default(10)|float]|max %}

    G90 ; absolute
    G1 Z { [target_z, max_z]|min }

[gcode_macro GO_TO_BUCKET]
description: Go to purge bucket position for filament unload or purging
gcode:
    CLEAR_Z AMOUNT=30

    G90 ; absolute

    {% set curr_y = printer.toolhead.position.y %}
    {% if curr_y > 240 %} ; prevent crash from rear
        G1 Y240 F9000
    {% endif %}

    G1 X97 Y240 F9000
    SET_ACCEL ACCEL=100
    G1 Y254 F1500 ; gently press against wiper arm
    SET_ACCEL ; reset accel

[gcode_macro LEAVE_BUCKET]
description: Leave the bucket gracefully
gcode:
    {% set curr_x = printer.toolhead.position.x %}
    {% set curr_y = printer.toolhead.position.y %}
    {% if (curr_y >= 240) and (curr_x >= 59) and (curr_x <= 98) %}
        G90 ; absolute
        SET_ACCEL ACCEL=500
        G1 Y254 F2000
        G1 X97 F5000
        SET_ACCEL ACCEL=100
        G1 Y240 F1500 ; gently leave the wiper arm
        SET_ACCEL ; reset accel
    {% endif %}

[gcode_macro BUCKET_CUT]
description: Cut off the extruded filament on the nozzle
gcode:
    # G1 X85 F4000
    # G1 X97 F2000
    # G1 X85 F4000
    # G1 X97 F2000
    # G1 X85 F6000
    # G1 X97 F3000
    # G1 X85 F6000
    # G1 X97 F3000 ; don't end on the felt

    {% set i = 6 %}
    {% for iteration in range(i|int) %}
        G1 X85 F2000
        G1 X98 F2000
    {% endfor %}

[gcode_macro FELT_WIPE]
description: Wipe on the felt pad
gcode:
    G90 ; absolute

    G1 X65 F500
    G1 X88 F500
    G1 X65 F500
    G1 X88 F500
    G1 X65 F500

    G1 Y249 F500
    G1 Y254 F500
    G1 Y249 F500
    G1 Y254 F500
    G1 Y249 F500
    G1 Y253.5 F500

    G1 X88 F500
    G1 X65 F500
    G1 X88 F500
    G1 X65 F500
    G1 X85 F500

    G1 X98 F500

    {% set i = 6 %}
    {% for iteration in range(i|int) %}
        G1 X85 F2000
        G1 X98 F2000
    {% endfor %}

[gcode_macro BUCKET_PURGE]
description: Purge filament to the purge bucket
gcode:
    M118 Purging
    GO_TO_BUCKET

    ; Wait for extruder to be +/- 5% of target
    {% set hotendtemp = params.HOTEND|default(250)|int %}
    M104 S{hotendtemp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={hotendtemp * 0.95} MAXIMUM={hotendtemp * 1.05}

    {% set purgeamount = params.AMOUNT|default(80)|int %}
    M83 ; relative E
    G92 E0 ; reset E
    G1 E{purgeamount} F400 ; extrude
    G1 E-1 F400 ; retract

    M106 S255 ; cooling fan max
    G4 P5000 ; wait for 5 seconds
    M106 S0 ; cooling fan off

    BUCKET_CUT
    {% set leave = params.LEAVE|default(1)|int %}
    {% if leave > 0 %}
        LEAVE_BUCKET
    {% endif %}


[gcode_macro CLEAR_NOZZLE]
gcode:
    {% set hotendtemp = params.HOTEND|default(250)|int %}
    {% set purgeamount = params.AMOUNT|default(80)|int %}
    {% set cool_nozzle = params.COOLDOWN|default(1)|int %}

    BUCKET_PURGE HOTEND={hotendtemp} AMOUNT={purgeamount} LEAVE={0} ; purge without leaving

    {% if cool_nozzle > 0 %}
        M104 S0 ; shut down extruder
    {% endif %}
    FELT_WIPE
    M400
    M118 Nozzle cleared

    LEAVE_BUCKET ; gracefully leave the bucket

    {% if cool_nozzle > 0 %}
        G1 Y120 F9000
        G1 X230 F9000
        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED=1
        SET_FAN_SPEED FAN=cooling_fan SPEED=1
        TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={hotendtemp * 0.8}
        M118 Nozzle cooled
        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED=0
        SET_FAN_SPEED FAN=cooling_fan SPEED=0
    {% endif %}

    M107
    M106 P2 S0
    M400

[gcode_macro PRINT_START]
gcode:
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    M140 S{bedtemp}
    M141 S{chambertemp}
    G28

    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedtemp * 0.95} MAXIMUM={bedtemp * 1.05}
    BED_MESH_CALIBRATE
    AUTO_Z_CALIBRATE

    M104 S{hotendtemp}
    G0 Z30 F600
    G1 X97 F9000
    G1 Y254 F9000

    CLEAR_NOZZLE HOTEND={hotendtemp}
    M104 S{hotendtemp}
    G1 X120 Y120 F7800

    M191 S{chambertemp}
    M109 S{hotendtemp}
    M204 S10000

    #ENABLE_FILAMENT_SENSORS

[gcode_macro ENABLE_FILAMENT_SENSORS]
gcode:
    ENABLE_FILAMENT_WIDTH_SENSOR
    RESET_FILAMENT_WIDTH_SENSOR
    query_filament_width
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1

[gcode_macro DISABLE_FILAMENT_SENSORS]
gcode:
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0
    DISABLE_FILAMENT_WIDTH_SENSOR

[gcode_macro M84]
rename_existing: M84.1
gcode:
    M84.1
    SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
    SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
    SET_STEPPER_ENABLE STEPPER=stepper_z enable=1
    SET_STEPPER_ENABLE STEPPER=stepper_z1 enable=1
    SET_STEPPER_ENABLE STEPPER=extruder enable=0

[gcode_macro KINEMATIC_POSITION]
gcode:
    {% set was_interrupted = printer.save_variables.variables.was_interrupted %}
    {% if was_interrupted %}
    M118 Detected unexpected interruption during the last print. Do you want to resume printing? (Do not move the extruder before resuming.)
    M118 Yes: RESUME_INTERRUPTED
    M118 No: CLEAR_LAST_FILE
    {% endif %}

[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.2
gcode:
    SET_STEPPER_ENABLE STEPPER=stepper_z enable=1
    SET_STEPPER_ENABLE STEPPER=stepper_z1 enable=1
    BED_MESH_CLEAR
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0
    {% set was_interrupted = printer.save_variables.variables.was_interrupted %}
    {% if was_interrupted %}
    M118 Detected unexpected interruption during the last print. Do you want to resume printing? (Do not move the extruder before resuming.)
    M118 Yes: RESUME_INTERRUPTED
    M118 No: CLEAR_LAST_FILE
    {% endif %}

[homing_override]
axes:xyz
gcode:
    {% set HOME_CUR = 1 %}
    {% set driver_config = printer.configfile.settings['tmc2240 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    M204 S10000
    {% if params.X is defined %}
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR * 0.7}
        G28 X
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
        BEEP I=1 DUR=100
        G1 X10 F1200
    {% endif %}

    {% if params.Y is defined %}
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR * 0.9}
        G28 Y
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
        BEEP I=1 DUR=100
        G1 Y10 F1200
    {% endif %}

    {% if params.Z is defined %}
        SET_KINEMATIC_POSITION Z={printer.toolhead.axis_maximum.z-5}
        probe samples=2
        SET_KINEMATIC_POSITION Z=1.9
        G1 Z10 F600
        VIBRATE
        G1 Z30 F480
    {% endif %}

    {% if params.X is undefined %}
    {% if params.Y is undefined %}
    {% if params.Z is undefined %}
        SET_KINEMATIC_POSITION X=0
        SET_KINEMATIC_POSITION Y=0
        SET_KINEMATIC_POSITION Z={printer.toolhead.axis_maximum.z-5}
        G91
        G1 Z5 F600
        G1 X10 F2400
        G1 Y10 F2400
        G4 P2000

        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR * 0.8}
        G28 X
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
        BEEP I=1 DUR=100
        G1 X10 F1200

        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR * 0.9}
        G28 Y
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
        BEEP I=1 DUR=100
        G1 Y10 F1200

        SET_KINEMATIC_POSITION Z={printer.toolhead.axis_maximum.z-5}

        G90
        G1 X120 Y120 F7800
        G91
        G28 Z
        G1 Z10 F600
        VIBRATE

        {% if not printer.z_tilt.applied %}
            Z_TILT_ADJUST ; if we can home all, we can probably safely z_tilt as well
        {% endif %}

        G90
        G1 X120 Y120 F7800
        G1 Z10 F600

    {% endif %}
    {% endif %}
    {% endif %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    M204 S10000
    G90

[gcode_macro SHAPER_CALIBRATE]
rename_existing: RESHAPER_CALIBRATE
gcode:
    RESHAPER_CALIBRATE FREQ_START=20 FREQ_END=150

[gcode_macro DISABLE_FANS_AND_HEATERS]
gcode:
    M106 P2 S0
    M106 P0 S0
    M106 P3 S0

    M104 S0
    M140 S0
    M141 S0

[gcode_macro PRINT_END]
gcode:
    CLEAR_PAUSE

    DISABLE_FANS_AND_HEATERS

    M220 S100 #reset speed factor
    M221 S100 #reset extrude factor

    M84 #TODO disables all steppers first, could be a problem for z, z1 motors

    #DISABLE_FILAMENT_SENSORS
    SET_GCODE_OFFSET Z=0 MOVE=0
    BED_MESH_CLEAR
    CLEAR_LAST_FILE
    BEEP I=2 DUR=500

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    RAISE_Z AMOUNT=10  ; drop z by  10 to keep part away from nozzle
    CLEAR_Z AMOUNT=150 ; drop z to 150 for easy build plate removal

    G1 X0 Y0 F7800

    CLEAR_PAUSE

    DISABLE_FANS_AND_HEATERS

    M220 S100 #reset speed factor
    M221 S100 #reset extrude factor

    M84 #TODO disables all steppers first, could be a problem for z, z1 motors

    #DISABLE_FILAMENT_SENSORS
    SET_GCODE_OFFSET Z=0 MOVE=0
    BED_MESH_CLEAR
    BEEP I=2 DUR=500

    BASE_CANCEL_PRINT
    CLEAR_LAST_FILE

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(35)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        #DISABLE_FILAMENT_SENSORS
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z ) < z %}                                        ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            G91                                                                              ; relative positioning
            G1 Z{5} F900
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        SAVE_GCODE_STATE NAME=PAUSEPARK2
        G90                                                                                  ; absolute positioning
        G1 X97 F9000
        G1 Y253 F9000                                     ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_STEPPER_ENABLE STEPPER=extruder enable=0
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        M83                                                                          ; relative extruder positioning
        G1 X97  F9000
        G1 Y253 F9000
        G91
        G1  E{e} F300                                                ; prime nozzle by E, lower Z back down
        G90
        CLEAR_NOZZLE
        G1 Y200 F3000
        RESTORE_GCODE_STATE NAME=PAUSEPARK2 MOVE=1 MOVE_SPEED=200
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=10                         ; restore position
        BASE_RESUME
        #ENABLE_FILAMENT_SENSORS
    {% endif %}

[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}        ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}  ; Duration/wait of each beep in ms. Default 100ms.

    {% if printer["output_pin sound"].value|int == 1 %}
        {% for iteration in range(i|int) %}
            SET_PIN PIN=beeper VALUE=1
            G4 P{dur}
            SET_PIN PIN=beeper VALUE=0
            G4 P{dur}
        {% endfor %}
    {% endif %}

[gcode_macro M141]
description: set chamber heater temperature
gcode:
    {% set s = params.S|float %}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={([s, 60]|min)}

[gcode_macro M191]
description: wait for chamber to reach temperature
gcode:
    #Parameters
    {% set s = params.S|float %}

    M141 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={([s, 60]|min)-2} #MAXIMUM={s+1}
    {% endif %}

[gcode_macro M106]
description: set fan speed (aux/cooling/circulation)
gcode:
    {% set p = params.P|default(0)|int %}

    {% if p == 2 %}
    {% if params.S is defined %}
        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED={(params.S|float / 255.0)}
    {% else %}
        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED=1
    {% endif %}
    {% endif %}

    {% if p == 0 %}
    {% if params.S is defined %}
        SET_FAN_SPEED FAN=cooling_fan SPEED={(params.S|float / 255.0)}
    {% else %}
        SET_FAN_SPEED FAN=cooling_fan SPEED=1
    {% endif %}
    {% endif %}

    {% if p == 3 %}
    {% if params.S is defined %}
        SET_FAN_SPEED FAN=chamber_circulation_fan SPEED={(params.S|float / 255.0)}
    {% else %}
        SET_FAN_SPEED FAN=chamber_circulation_fan SPEED=1
    {% endif %}
    {% endif %}

[gcode_macro M107]
description: stop cooling fan speed
gcode:
    SET_FAN_SPEED FAN=cooling_fan SPEED=0

[gcode_macro M603]
description: filament unload
gcode:
    M118 Heat up complete
    G92 E0
    G0  E15 F400
    G4  P1000
    G92 E0
    G1  E-80 F800
    M400
    M118 Unload finish

[gcode_macro M604]
description: filament load
gcode:
    M118 Heat up complete
    M83
    G1 E80 F400
    M400
    M118 Load finish

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M204]
rename_existing: M99204
gcode:
    {% if params.S is defined %}
        {% set s = params.S|float %}
    {% endif %}
    {% if params.P is defined %}
    {% if params.T is defined %}
        {% set s = [params.P|float ,params.T|float] | min %}
    {% endif %}
    {% endif %}

    SET_VELOCITY_LIMIT ACCEL={s}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={s/2}

[gcode_macro VIBRATE]
gcode:
    M204 S5000
    G91
    G1 X2 F6000
    G1 X-2 F6000
    G1 X2 F6000
    G1 X-2 F6000
    G1 X2 F6000
    G1 X-2 F6000
    G1 X2 F6000
    G1 X-2 F6000
    G1 X2 F6000
    G1 X-2 F6000
    G1 X2 F6000
    G1 X-2 F6000

    G1 Y2 F6000
    G1 Y-2 F6000
    G1 Y2 F6000
    G1 Y-2 F6000
    G1 Y2 F6000
    G1 Y-2 F6000
    G1 Y2 F6000
    G1 Y-2 F6000
    G1 Y2 F6000
    G1 Y-2 F6000
    G1 Y2 F6000
    G1 Y-2 F6000
    G1 Y2 F6000
    G1 Y-2 F6000

    G90
    M204 S5000
    SET_PIN PIN=ctlyd VALUE=1
    G91
    G1 Z1 F900
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G1 Z1
    G1 Z-1
    G90
    SET_PIN PIN=ctlyd VALUE=0
    G4 P500
